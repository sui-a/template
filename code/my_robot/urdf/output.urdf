<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="my_robot">
  <link name="foot_footprint"/>
  <!-- 基础连杆（名称动态生成） -->
  <link name="base_link">
    <!-- 视觉外观 -->
    <visual>
      <geometry>
        <box size="0.5 0.3 0.1"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 0.8 1"/>
      </material>
    </visual>
    <!-- 碰撞属性（必须与visual几何形状一致） -->
    <collision>
      <geometry>
        <box size="0.5 0.3 0.1"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- Gazebo仿真时碰撞检测会使用此属性 -->
    </collision>
    <!-- 精确惯性矩阵 -->
    <inertial>
      <mass value="2.0"/>
      <inertia ixx="0.043333333333333335" ixy="0" ixz="0" iyy="0.056666666666666664" iyz="0" izz="0.056666666666666664"/>
    </inertial>
  </link>
  <!-- 连接虚拟部件 -->
  <joint name="base_link_to_foot_joint_name" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.15"/>
    <parent link="foot_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- Gazebo颜色配置（可选） -->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <link name="left_wheel1">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
        <!-- 添加具体参数 -->
      </geometry>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/>
        <!-- 补充颜色定义 -->
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
    <!-- 添加的惯性矩阵（圆柱体公式） -->
    <inertial>
      <mass value="0.5"/>
      <!-- 默认质量，建议通过参数传入 -->
      <inertia ixx="0.001354166666666667" ixy="0" ixz="0" iyy="0.001354166666666667" iyz="0" izz="0.0025000000000000005"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <joint name="left_wheel1_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel1"/>
    <origin rpy="0 0 0" xyz="0.17 0.16 -0.05"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="left_wheel1">
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="left_wheel2">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
        <!-- 添加具体参数 -->
      </geometry>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/>
        <!-- 补充颜色定义 -->
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
    <!-- 添加的惯性矩阵（圆柱体公式） -->
    <inertial>
      <mass value="0.5"/>
      <!-- 默认质量，建议通过参数传入 -->
      <inertia ixx="0.001354166666666667" ixy="0" ixz="0" iyy="0.001354166666666667" iyz="0" izz="0.0025000000000000005"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <joint name="left_wheel2_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel2"/>
    <origin rpy="0 0 0" xyz="-0.17 0.16 -0.05"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="left_wheel2">
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="right_wheel1">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
        <!-- 添加具体参数 -->
      </geometry>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/>
        <!-- 补充颜色定义 -->
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
    <!-- 添加的惯性矩阵（圆柱体公式） -->
    <inertial>
      <mass value="0.5"/>
      <!-- 默认质量，建议通过参数传入 -->
      <inertia ixx="0.001354166666666667" ixy="0" ixz="0" iyy="0.001354166666666667" iyz="0" izz="0.0025000000000000005"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <joint name="right_wheel1_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel1"/>
    <origin rpy="0 0 0" xyz="0.17 -0.16 -0.05"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="right_wheel1">
    <material>Gazebo/Grey</material>
  </gazebo>
  <link name="right_wheel2">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
        <!-- 添加具体参数 -->
      </geometry>
      <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/>
        <!-- 补充颜色定义 -->
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
    <!-- 添加的惯性矩阵（圆柱体公式） -->
    <inertial>
      <mass value="0.5"/>
      <!-- 默认质量，建议通过参数传入 -->
      <inertia ixx="0.001354166666666667" ixy="0" ixz="0" iyy="0.001354166666666667" iyz="0" izz="0.0025000000000000005"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <joint name="right_wheel2_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel2"/>
    <origin rpy="0 0 0" xyz="-0.17 -0.16 -0.05"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="right_wheel2">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- 1. 定义正方形连杆(link) -->
  <link name="arm_base">
    <visual>
      <geometry>
        <box size="0.2 0.2 0.01"/>
      </geometry>
      <material name="light_red">
        <color rgba="1 0.6 0.6 1"/>
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <geometry>
        <box size="0.2 0.2 0.01"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <!-- 添加的惯性矩阵（长方体公式） -->
    <inertial>
      <mass value="0.5"/>
      <!-- 默认质量，建议后续通过参数传入 -->
      <inertia ixx="0.0016708333333333338" ixy="0" ixz="0" iyy="0.003333333333333334" iyz="0" izz="0.0016708333333333338"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- 2. 固定关节(fixed joint)连接到父坐标系 -->
  <joint name="arm_base_fixed_joint" type="fixed">
    <!-- 通过*origin传递位置参数 -->
    <origin rpy="0 0 0" xyz="-0.05 0 0.05"/>
    <parent link="base_link"/>
    <child link="arm_base"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="arm_base">
    <material>Gazebo/Orange</material>
    <!-- 使用与RVIZ相近的橙色 -->
  </gazebo>
  <!-- 球体连杆 -->
  <link name="marker">
    <!-- 视觉属性 -->
    <visual>
      <geometry>
        <sphere radius="0.12"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="marker_color">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <geometry>
        <sphere radius="0.12"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <!-- 添加的惯性矩阵（球体公式） -->
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.0005759999999999999" ixy="0" ixz="0" iyy="0.0005759999999999999" iyz="0" izz="0.0005759999999999999"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- 固定关节 -->
  <joint name="marker_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="arm_base"/>
    <child link="marker"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="marker">
    <material>Gazebo/Grey</material>
    <mu1>0.5</mu1>
    <!-- 摩擦系数1 -->
    <mu2>0.5</mu2>
    <!-- 摩擦系数2 -->
    <kp>1000000.0</kp>
    <!-- 接触刚度 -->
    <kd>1000.0</kd>
    <!-- 接触阻尼 -->
  </gazebo>
  <!-- 默认灰色材质 -->
  <!-- 连杆定义 -->
  <link name="arm1">
    <!-- 视觉属性 -->
    <visual>
      <geometry>
        <box size="0.15 0.15 0.25"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
      <material name="arm1_color">
        <color rgba="0.7 0.7 0.7 1"/>
      </material>
    </visual>
    <!-- 添加的碰撞属性（长方体） -->
    <collision>
      <geometry>
        <box size="0.15 0.15 0.25"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
    </collision>
    <!-- 添加的惯性矩阵（长方体公式） -->
    <inertial>
      <mass value="1.0"/>
      <inertia ixx="0.007083333333333333" ixy="0" ixz="0" iyy="0.00375" iyz="0" izz="0.007083333333333333"/>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
    </inertial>
  </link>
  <!-- 关节定义：绕Y轴旋转（0-180度限制） -->
  <joint name="arm1_joint" type="revolute">
    <origin rpy="0 1.5708 0" xyz="0 0 0.075"/>
    <!-- 通过宏参数传递安装位置 -->
    <parent link="marker"/>
    <child link="arm1"/>
    <axis xyz="0 1 0"/>
    <!-- Y轴旋转 -->
    <limit effort="100" lower="-1.5708" upper="1.5708" velocity="1.0"/>
    <dynamics damping="0.1"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="arm1">
    <material>Gazebo/Grey</material>
    <mu1>0.5</mu1>
    <!-- 摩擦系数1 -->
    <mu2>0.5</mu2>
    <!-- 摩擦系数2 -->
    <kp>1000000.0</kp>
    <!-- 接触刚度 -->
    <kd>1000.0</kd>
    <!-- 接触阻尼 -->
  </gazebo>
  <!-- 密度假设为0.001 kg/cm³ -->
  <!-- 中间连杆（用于旋转） -->
  <link name="arm2_rotation_link">
    <inertial>
      <mass value="0.001"/>
      <!-- 很小的质量 -->
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <!-- 旋转关节（与父连杆连接） -->
  <joint name="arm2_rotation_joint" type="revolute">
    <origin rpy="0 0.0 0" xyz="0 0 0"/>
    <!-- 通过宏参数传递安装位置 -->
    <parent link="arm1"/>
    <child link="arm2_rotation_link"/>
    <axis xyz="0 0 1"/>
    <!-- 绕Z轴旋转 -->
    <limit effort="100" lower="-3.14159" upper="3.14159" velocity="0.5"/>
    <!-- 可自由旋转 -->
    <dynamics damping="0.1"/>
  </joint>
  <!-- 长方体连杆（实际的可伸缩部分） -->
  <link name="arm2">
    <!-- 视觉属性 -->
    <visual>
      <geometry>
        <box size="0.1 0.1 0.3"/>
        <!-- 正方形底，高度可调 -->
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <!-- 原点位于几何中心 -->
      <material name="arm1_box_color">
        <color rgba="0 0 0.7 1"/>
      </material>
    </visual>
    <!-- 添加的碰撞属性（长方体） -->
    <collision>
      <geometry>
        <box size="0.1 0.1 0.3"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
    </collision>
    <!-- 添加的惯性矩阵（长方体公式） -->
    <inertial>
      <mass value="3.0000000000000005e-06"/>
      <inertia ixx="2.500000000000001e-08" ixy="0" ixz="0" iyy="5.000000000000002e-09" iyz="0" izz="2.500000000000001e-08"/>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
    </inertial>
  </link>
  <!-- 棱柱关节（沿Z轴伸缩） -->
  <joint name="arm2_prismatic_joint" type="prismatic">
    <parent link="arm2_rotation_link"/>
    <child link="arm2"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <!-- 连接到旋转连杆 -->
    <axis xyz="0 0 1"/>
    <!-- Z轴方向 -->
    <limit effort="100" lower="0" upper="0.2" velocity="0.5"/>
    <!-- 伸缩范围为0到高度 -->
    <dynamics damping="0.1"/>
  </joint>
  <!-- Gazebo颜色配置（必须添加否则Gazebo中无颜色） -->
  <gazebo reference="arm2">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="arm2_rotation_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- 雷达连杆 -->
  <link name="lader">
    <visual>
      <geometry>
        <sphere radius="0.05"/>
        <!-- 使用传入的半径参数 -->
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue">
        <color rgba="1.0 0 0 0.8"/>
        <!-- 半透明蓝色材质 -->
      </material>
    </visual>
    <!-- 添加的碰撞属性（与visual几何形状一致） -->
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <!-- 添加的惯性矩阵（球体公式） -->
    <inertial>
      <mass value="0.1"/>
      <!-- 默认质量，建议通过参数传入 -->
      <inertia ixx="0.00010000000000000002" ixy="0" ixz="0" iyy="0.00010000000000000002" iyz="0" izz="0.00010000000000000002"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- 固定关节连接父连杆 -->
  <joint name="radar_joint" type="fixed">
    <origin rpy="0 1.5708 0" xyz="0.25 0 0"/>
    <!-- 通过宏参数传递安装位置 -->
    <parent link="base_link"/>
    <!-- 指定父连杆名称 -->
    <child link="lader"/>
  </joint>
  <!-- Gazebo配置（Livox Mid360专用） -->
  <gazebo reference="lader">
    <material>Gazebo/Red</material>
    <!-- Livox雷达传感器插件 -->
    <sensor name="lader_lidar" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <!-- 水平100个采样点 -->
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>6.283185307179586</max_angle>
            <!-- 360°水平FOV -->
          </horizontal>
          <vertical>
            <samples>360</samples>
            <!-- 垂直360个采样点 -->
            <resolution>1</resolution>
            <min_angle>-0.12601277199399058</min_angle>
            <!-- -7.22° -->
            <max_angle>0.9637708129512687</max_angle>
            <!-- 55.22° -->
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <!-- 最小探测距离0.1m -->
          <max>200.0</max>
          <!-- 最大探测距离200m -->
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="livox_plugin">
        <ros>
          <namespace>/livox</namespace>
          <remapping>~/out:=mid360</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lader</frame_name>
      </plugin>
    </sensor>
    <!-- 集成IMU（Livox Mid360实际包含IMU） -->
    <sensor name="lader_imu" type="imu">
      <always_on>true</always_on>
      <update_rate>200</update_rate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>0.0002</stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>0.003</stddev>
          </accel>
        </noise>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topic_name>/livox/imu</topic_name>
        <body_name>lader</body_name>
        <frame_name>lader_imu</frame_name>
      </plugin>
    </sensor>
  </gazebo>
</robot>
